{"version":3,"sources":["components/MenuItem.js","App.js","reportWebVitals.js","index.js"],"names":["MenuItem","_ref","id","title","description","price","imageName","order","setOrder","React","createElement","className","src","alt","onClick","handleMinusClick","Array","isArray","newOrder","slice","handlePlusClick","menuItems","App","useState","length","fill","map","item","reduce","acc","curr","index","toFixed","orderButton","overlay","document","querySelector","style","display","disabled","querySelectorAll","forEach","button","body","overflow","every","startUp_Close","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d5c61979.chunk.js","sourcesContent":["import React from 'react';\n\n\n// This is a functional component that represents a single menu item. It currently takes in the title and displays it in an h2 element.\n// Modify the component to take in all the other properties of a menu item you need and display them in the component.\n// Use bootstrap to style the elements so that it looks like the mockup in the assignment.\n// Hint: You can use the image name to get the image from the images folder.\n// import bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst MenuItem = ({ id, title, description, price, imageName, order, setOrder }) => {\n    \n    const handleMinusClick = () => {\n        if (Array.isArray(order) && order[id - 1] > 0) {\n            // copy the order array and subtract 1 from the element at id - 1\n            var newOrder = order.slice();\n            newOrder[id - 1] -= 1;\n            setOrder(newOrder);\n        }\n    };\n\n    const handlePlusClick = () => {\n        if (Array.isArray(order)) {\n            // copy the order array and add 1 to the element at id - 1\n            var newOrder = order.slice();\n            newOrder[id - 1] += 1;\n            setOrder(newOrder);\n        }\n    };\n\n    const getOrder = () => {\n        if (Array.isArray(order)) {\n            return order[id - 1];\n        }\n        return 0;\n    }\n\n    return (\n        <div className='row item'>\n            <div className='col-4'>\n                <img src={'images/' + imageName} className='card-img-top' alt={title} />\n            </div>\n            <div className='col-1'></div>\n            <div className='col-7'>\n                <div className='row'>\n                    <h2>{title}</h2>\n                </div>\n                <div className='row'>\n                    <p>{description}</p>\n                </div>\n                <div className='row'>\n                    <div className='col-8'>\n                        <p>{'$' + price}</p>\n                    </div>\n                    <div className='col-4'>\n                        {/* have a - and a + button with the current total in the middle of them.Add or remove element in order at id - 1 */}\n                        <button onClick={handleMinusClick} className='btn btn-secondary'>-</button>\n                        <span>{getOrder()}</span>\n                        <button onClick={handlePlusClick} className='btn btn-secondary'>+</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default MenuItem;\n","import './App.css';\nimport MenuItem from './components/MenuItem';\nimport React from 'react';\nimport { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; // This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\n\n// Menu data. An array of objects where each object represents a menu item. Each menu item has an id, title, description, image name, and price.\n// You can use the image name to get the image from the images folder.\nconst menuItems = [\n  {\n    id: 1,\n    title: 'Gyoza',\n    description: 'Japanese dumplings',\n    imageName: 'gyoza.png',\n    price: 5.99,\n  },\n  {\n    id: 2,\n    title: 'Sushi',\n    description: 'Japanese rice rolls',\n    imageName: 'sushi.png',\n    price: 6.99,\n  },\n  {\n    id: 3,\n    title: 'Ramen',\n    description: 'Japanese noodle soup',\n    imageName: 'ramen.png',\n    price: 7.99,\n  },\n  {\n    id: 4,\n    title: 'Matcha Cake',\n    description: 'Japanese green tea cake',\n    imageName: 'matcha-cake.png',\n    price: 4.99,\n  },\n  {\n    id: 5,\n    title: 'Mochi',\n    description: 'Japanese rice cake',\n    imageName: 'mochi.png',\n    price: 3.99,\n  },\n  {\n    id: 6,\n    title: 'Yakitori',\n    description: 'Japanese skewered chicken',\n    imageName: 'yakitori.png',\n    price: 2.99,\n  },\n  {\n    id: 7,\n    title: 'Takoyaki',\n    description: 'Japanese octopus balls',\n    imageName: 'takoyaki.png',\n    price: 5.99,\n  },\n  {\n    id: 8,\n    title: 'Sashimi',\n    description: 'Japanese raw fish',\n    imageName: 'sashimi.png',\n    price: 8.99,\n  },\n  {\n    id: 9,\n    title: 'Okonomiyaki',\n    description: 'Japanese savory pancake',\n    imageName: 'okonomiyaki.png',\n    price: 6.99,\n  },\n  {\n    id: 10,\n    title: 'Katsu Curry',\n    description: 'Japanese curry with fried pork',\n    imageName: 'katsu-curry.png',\n    price: 9.99,\n  }\n];\n\n\nexport default function App() {\n\n  // Set the size of the array to the number of menu items\n  const [order, setOrder] = useState(new Array(menuItems.length).fill(0));\n\n  // Creates pop-up of order when order button is clicked\nconst orderButton = () => {\n  // create overlay in middle of screen\n  var overlay = document.querySelector('.overlay');\n  if (!overlay.style.display || overlay.style.display === 'none') {\n    overlay.style.display = 'block';\n  } else {\n    overlay.style.display = 'none';\n  }\n  // Disable Order button until close button is clicked\n  var orderButton = document.querySelector('.order-button');\n  orderButton.disabled = true;\n  // Disable Clear All button until close button is clicked\n  var clearButton = document.querySelector('.clear-button');\n  clearButton.disabled = true;\n  // Disable all + and - buttons until close button is clicked\n  var plusButtons = document.querySelectorAll('.btn-secondary');\n  plusButtons.forEach((button) => {\n    button.disabled = true;\n  });\n\n  // Disable scrolling\n  document.body.style.overflow = 'hidden';\n}\n\nconst startUp_Close = () => {\n  var overlay = document.querySelector('.overlay');\n  overlay.style.display = 'none';\n  // Enable Order button\n  var orderButton = document.querySelector('.order-button');\n  orderButton.disabled = false;\n  // Enable Clear All button\n  var clearButton = document.querySelector('.clear-button');\n  clearButton.disabled = false;\n  // Enable all + and - buttons\n  var plusButtons = document.querySelectorAll('.btn-secondary');\n  plusButtons.forEach((button) => {\n    button.disabled = false;\n  });\n\n  // Enable scrolling\n  document.body.style.overflow = 'scroll';\n}\n\n  return (\n    <div>\n      <img className=\"logo\" src=\"images/shoplogo.png\" alt=\"logo\" />\n      <div className=\"row\">\n        <div className=\"row flavor-txt-1\">\n          <h3> The Best Japanese Food This Side of the Colorado River</h3>\n        </div>\n        <div className=\"row flavor-txt-2\">\n          <h3> Our Menu</h3>\n        </div>\n      </div>\n      <div className=\"menu\">\n        {/* Display menu items dynamicaly here by iterating over the provided menuItems */\n        // Send in order and setOrder as props to MenuItem\n        menuItems.map((item) => (\n          <MenuItem id={item.id} title={item.title} description={item.description} price={item.price} imageName={item.imageName} order={order} setOrder={setOrder}/>\n        ))\n}\n      </div>\n      {/* Add empty space at bottom */}\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <br />\n          <br />\n          <br />\n        </div>\n      </div>\n      {/* Bottom bar that is sticky, with two buttons. One orders the items in order, the other clears all of the items from order */}\n      <div className=\"row bottom-bar\">\n        <div className='col-6'>\n          <h3>Total: ${order.reduce((acc, curr, index) => acc + curr * menuItems[index].price, 0).toFixed(2)}</h3>\n        </div>\n        <div className='col-2'>\n          {/* On click, display the html from orderButton */}\n          <button className=\"order-button\" onClick={orderButton}>Order</button>\n        </div>\n        <div className='col-4'>\n          <button className=\"clear-button\" onClick={() => setOrder(new Array(menuItems.length).fill(0))}>Clear All</button>\n        </div>\n      </div>\n      <div className=\"overlay\" style={{ display: 'none' }}>\n        <div className=\"order-popup\">\n          {/* If all items in order are 0, display No items in cart, otherwise Order placed */}\n          {order.every((item) => item === 0) ? <h2>No items in cart</h2> : <h2>Order Placed!</h2>}\n          {/* Take the value in order and that item's index, and use it to display the number of the  item ordered, and using the index get the title of the item from MenuItems. Only show the item if there are more than 0 items*/}\n          {order.map((item, index) => (\n            item > 0 && <p>{item} {menuItems[index].title}</p>\n          ))}\n          {/* Button to close popup */}\n          <button onClick={startUp_Close}>Close</button>\n        </div>\n      </div>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}